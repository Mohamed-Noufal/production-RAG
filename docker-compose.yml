version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  inngest-dev:
    image: inngest/inngest:latest
    ports:
      - "8288:8288"
    environment:
      - INNGEST_SIGNING_KEY=development
      - INNGEST_EVENT_KEY=development
      - INNGEST_DATABASE_URL=in-memory
      - INNGEST_DEV=1
      - INNGEST_API_BASE=http://localhost:8288/v1
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8288/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rag-app:
    build: .
    ports:
      - "8000:8000"  # FastAPI
      - "8501:8501"  # Streamlit
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_HOST=qdrant
      - INNGEST_API_BASE=http://inngest-dev:8288/v1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      qdrant:
        condition: service_healthy
      inngest-dev:
        condition: service_healthy
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  qdrant_data:
    driver: local

networks:
  rag-network:
    driver: bridge